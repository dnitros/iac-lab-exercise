name: Deploy Infra

on: workflow_dispatch

env:
  AWS_REGION: ap-south-1
  IAM_ROLE: arn:aws:iam::160071257600:role/dnitros-iac-lab-github-actions-role
  VAR_FILE: dev.tfvars

jobs:
  init:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.53.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-session-name: GitHubActionsSession
          role-to-assume: ${{ env.IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Format check
        run: terraform fmt -recursive -check

      - name: Terraform Init
        run: terraform init

      - name: Init TFLint
        run: tflint --init

      - name: Run TFLint
        run: |
          tflint --var-file=${{ env.VAR_FILE }}

          # if tf_prerequisites directory exists, run tflint on it
          if [ -d "tf_prerequisites" ]; then
            tflint --chdir=tf_prerequisites
          fi

          # if backend_support directory exists, run tflint on it
          if [ -d "backend_support" ]; then
            tflint --chdir=backend_support
          fi

      - name: tfsec scan
        id: tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          additional_args: --minimum-severity MEDIUM --out tfsec --tfvars-file ${{ env.VAR_FILE }}
          format: lovely,markdown
          soft_fail: true

      - name: Summary
        if: contains(fromJSON('["success", "failure"]'), steps.tfsec.outcome) && always()
        run: echo "$(cat tfsec.markdown)" >> $GITHUB_STEP_SUMMARY

  plan:
    runs-on: ubuntu-latest
    needs: init
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-session-name: GitHubActionsSession
          role-to-assume: ${{ env.IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var-file=${{ env.VAR_FILE }}

  deploy:
    runs-on: ubuntu-latest
    needs: plan
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-session-name: GitHubActionsSession
          role-to-assume: ${{ env.IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -var-file=${{ env.VAR_FILE }} -auto-approve
